{"ast":null,"code":"import { TileLayer, Util } from 'leaflet';\nimport { pointerEvents } from '../Support';\nimport { request } from '../Request';\nimport { setEsriAttribution, _getAttributionData, _updateMapAttribution } from '../Util';\nvar tileProtocol = window.location.protocol !== 'https:' ? 'http:' : 'https:';\nexport var BasemapLayer = TileLayer.extend({\n  statics: {\n    TILES: {\n      Streets: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 19,\n          subdomains: ['server', 'services'],\n          attribution: 'USGS, NOAA',\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Street_Map'\n        }\n      },\n      Topographic: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 19,\n          subdomains: ['server', 'services'],\n          attribution: 'USGS, NOAA',\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Topo_Map'\n        }\n      },\n      Oceans: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 16,\n          subdomains: ['server', 'services'],\n          attribution: 'USGS, NOAA',\n          attributionUrl: 'https://static.arcgis.com/attribution/Ocean_Basemap'\n        }\n      },\n      OceansLabels: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Reference/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 16,\n          subdomains: ['server', 'services'],\n          pane: pointerEvents ? 'esri-labels' : 'tilePane',\n          attribution: ''\n        }\n      },\n      NationalGeographic: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 16,\n          subdomains: ['server', 'services'],\n          attribution: 'National Geographic, DeLorme, HERE, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, increment P Corp.'\n        }\n      },\n      DarkGray: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 16,\n          subdomains: ['server', 'services'],\n          attribution: 'HERE, DeLorme, MapmyIndia, &copy; OpenStreetMap contributors'\n        }\n      },\n      DarkGrayLabels: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Reference/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 16,\n          subdomains: ['server', 'services'],\n          pane: pointerEvents ? 'esri-labels' : 'tilePane',\n          attribution: ''\n        }\n      },\n      Gray: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 16,\n          subdomains: ['server', 'services'],\n          attribution: 'HERE, DeLorme, MapmyIndia, &copy; OpenStreetMap contributors'\n        }\n      },\n      GrayLabels: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Reference/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 16,\n          subdomains: ['server', 'services'],\n          pane: pointerEvents ? 'esri-labels' : 'tilePane',\n          attribution: ''\n        }\n      },\n      Imagery: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 22,\n          maxNativeZoom: 22,\n          downsampled: false,\n          subdomains: ['server', 'services'],\n          attribution: 'DigitalGlobe, GeoEye, i-cubed, USDA, USGS, AEX, Getmapping, Aerogrid, IGN, IGP, swisstopo, and the GIS User Community',\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Imagery'\n        }\n      },\n      ImageryLabels: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 19,\n          subdomains: ['server', 'services'],\n          pane: pointerEvents ? 'esri-labels' : 'tilePane',\n          attribution: ''\n        }\n      },\n      ImageryTransportation: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 19,\n          subdomains: ['server', 'services'],\n          pane: pointerEvents ? 'esri-labels' : 'tilePane',\n          attribution: ''\n        }\n      },\n      ShadedRelief: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 13,\n          subdomains: ['server', 'services'],\n          attribution: 'USGS'\n        }\n      },\n      ShadedReliefLabels: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places_Alternate/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 12,\n          subdomains: ['server', 'services'],\n          pane: pointerEvents ? 'esri-labels' : 'tilePane',\n          attribution: ''\n        }\n      },\n      Terrain: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 13,\n          subdomains: ['server', 'services'],\n          attribution: 'USGS, NOAA'\n        }\n      },\n      TerrainLabels: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Reference_Overlay/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 13,\n          subdomains: ['server', 'services'],\n          pane: pointerEvents ? 'esri-labels' : 'tilePane',\n          attribution: ''\n        }\n      },\n      USATopo: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/USA_Topo_Maps/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 15,\n          subdomains: ['server', 'services'],\n          attribution: 'USGS, National Geographic Society, i-cubed'\n        }\n      },\n      ImageryClarity: {\n        urlTemplate: tileProtocol + '//clarity.maptiles.arcgis.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 19,\n          attribution: 'Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community'\n        }\n      },\n      Physical: {\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 8,\n          subdomains: ['server', 'services'],\n          attribution: 'U.S. National Park Service'\n        }\n      },\n      ImageryFirefly: {\n        urlTemplate: tileProtocol + '//fly.maptiles.arcgis.com/arcgis/rest/services/World_Imagery_Firefly/MapServer/tile/{z}/{y}/{x}',\n        options: {\n          minZoom: 1,\n          maxZoom: 19,\n          attribution: 'Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Imagery'\n        }\n      }\n    }\n  },\n  initialize: function (key, options) {\n    var config; // set the config variable with the appropriate config object\n\n    if (typeof key === 'object' && key.urlTemplate && key.options) {\n      config = key;\n    } else if (typeof key === 'string' && BasemapLayer.TILES[key]) {\n      config = BasemapLayer.TILES[key];\n    } else {\n      throw new Error('L.esri.BasemapLayer: Invalid parameter. Use one of \"Streets\", \"Topographic\", \"Oceans\", \"OceansLabels\", \"NationalGeographic\", \"Physical\", \"Gray\", \"GrayLabels\", \"DarkGray\", \"DarkGrayLabels\", \"Imagery\", \"ImageryLabels\", \"ImageryTransportation\", \"ImageryClarity\", \"ImageryFirefly\", ShadedRelief\", \"ShadedReliefLabels\", \"Terrain\", \"TerrainLabels\" or \"USATopo\"');\n    } // merge passed options into the config options\n\n\n    var tileOptions = Util.extend(config.options, options);\n    Util.setOptions(this, tileOptions);\n\n    if (this.options.token && config.urlTemplate.indexOf('token=') === -1) {\n      config.urlTemplate += '?token=' + this.options.token;\n    }\n\n    if (this.options.proxy) {\n      config.urlTemplate = this.options.proxy + '?' + config.urlTemplate;\n    } // call the initialize method on L.TileLayer to set everything up\n\n\n    TileLayer.prototype.initialize.call(this, config.urlTemplate, tileOptions);\n  },\n  onAdd: function (map) {\n    // include 'Powered by Esri' in map attribution\n    setEsriAttribution(map);\n\n    if (this.options.pane === 'esri-labels') {\n      this._initPane();\n    } // some basemaps can supply dynamic attribution\n\n\n    if (this.options.attributionUrl) {\n      _getAttributionData((this.options.proxy ? this.options.proxy + '?' : '') + this.options.attributionUrl, map);\n    }\n\n    map.on('moveend', _updateMapAttribution); // Esri World Imagery is cached all the way to zoom 22 in select regions\n\n    if (this._url.indexOf('World_Imagery') !== -1) {\n      map.on('zoomanim', _fetchTilemap, this);\n    }\n\n    TileLayer.prototype.onAdd.call(this, map);\n  },\n  onRemove: function (map) {\n    map.off('moveend', _updateMapAttribution);\n    TileLayer.prototype.onRemove.call(this, map);\n  },\n  _initPane: function () {\n    if (!this._map.getPane(this.options.pane)) {\n      var pane = this._map.createPane(this.options.pane);\n\n      pane.style.pointerEvents = 'none';\n      pane.style.zIndex = 500;\n    }\n  },\n  getAttribution: function () {\n    if (this.options.attribution) {\n      var attribution = '<span class=\"esri-dynamic-attribution\">' + this.options.attribution + '</span>';\n    }\n\n    return attribution;\n  }\n});\n\nfunction _fetchTilemap(evt) {\n  var map = evt.target;\n\n  if (!map) {\n    return;\n  }\n\n  var oldZoom = map.getZoom();\n  var newZoom = evt.zoom;\n  var newCenter = map.wrapLatLng(evt.center);\n\n  if (newZoom > oldZoom && newZoom > 13 && !this.options.downsampled) {\n    // convert wrapped lat/long into tile coordinates and use them to generate the tilemap url\n    var tilePoint = map.project(newCenter, newZoom).divideBy(256).floor(); // use new coords to determine the tilemap url\n\n    var tileUrl = Util.template(this._url, Util.extend({\n      s: this._getSubdomain(tilePoint),\n      x: tilePoint.x,\n      y: tilePoint.y,\n      z: newZoom\n    }, this.options)); // 8x8 grids are cached\n\n    var tilemapUrl = tileUrl.replace(/tile/, 'tilemap') + '/8/8'; // an array of booleans in the response indicate missing tiles\n\n    request(tilemapUrl, {}, function (err, response) {\n      if (!err) {\n        for (var i = 0; i < response.data.length; i++) {\n          if (!response.data[i]) {\n            // if necessary, resample a lower zoom\n            this.options.maxNativeZoom = newZoom - 1;\n            this.options.downsampled = true;\n            break;\n          } // if no tiles are missing, reset the original maxZoom\n\n\n          this.options.maxNativeZoom = 22;\n        }\n      }\n    }, this);\n  } else if (newZoom < 13) {\n    // if the user moves to a new region, time for a fresh test\n    this.options.downsampled = false;\n  }\n}\n\nexport function basemapLayer(key, options) {\n  return new BasemapLayer(key, options);\n}\nexport default basemapLayer;","map":{"version":3,"sources":["C:/Users/incluit/Desktop/projects/smartHuerta-FE/egghead-code-examples/add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder/node_modules/esri-leaflet/src/Layers/BasemapLayer.js"],"names":["TileLayer","Util","pointerEvents","request","setEsriAttribution","_getAttributionData","_updateMapAttribution","tileProtocol","window","location","protocol","BasemapLayer","extend","statics","TILES","Streets","urlTemplate","options","minZoom","maxZoom","subdomains","attribution","attributionUrl","Topographic","Oceans","OceansLabels","pane","NationalGeographic","DarkGray","DarkGrayLabels","Gray","GrayLabels","Imagery","maxNativeZoom","downsampled","ImageryLabels","ImageryTransportation","ShadedRelief","ShadedReliefLabels","Terrain","TerrainLabels","USATopo","ImageryClarity","Physical","ImageryFirefly","initialize","key","config","Error","tileOptions","setOptions","token","indexOf","proxy","prototype","call","onAdd","map","_initPane","on","_url","_fetchTilemap","onRemove","off","_map","getPane","createPane","style","zIndex","getAttribution","evt","target","oldZoom","getZoom","newZoom","zoom","newCenter","wrapLatLng","center","tilePoint","project","divideBy","floor","tileUrl","template","s","_getSubdomain","x","y","z","tilemapUrl","replace","err","response","i","data","length","basemapLayer"],"mappings":"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","sourcesContent":["import { TileLayer, Util } from 'leaflet';\r\nimport { pointerEvents } from '../Support';\r\nimport { request } from '../Request';\r\nimport {\r\n  setEsriAttribution,\r\n  _getAttributionData,\r\n  _updateMapAttribution\r\n} from '../Util';\r\n\r\nvar tileProtocol = (window.location.protocol !== 'https:') ? 'http:' : 'https:';\r\n\r\nexport var BasemapLayer = TileLayer.extend({\r\n  statics: {\r\n    TILES: {\r\n      Streets: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 19,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'USGS, NOAA',\r\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Street_Map'\r\n        }\r\n      },\r\n      Topographic: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 19,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'USGS, NOAA',\r\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Topo_Map'\r\n        }\r\n      },\r\n      Oceans: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 16,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'USGS, NOAA',\r\n          attributionUrl: 'https://static.arcgis.com/attribution/Ocean_Basemap'\r\n        }\r\n      },\r\n      OceansLabels: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Reference/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 16,\r\n          subdomains: ['server', 'services'],\r\n          pane: (pointerEvents) ? 'esri-labels' : 'tilePane',\r\n          attribution: ''\r\n        }\r\n      },\r\n      NationalGeographic: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 16,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'National Geographic, DeLorme, HERE, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, increment P Corp.'\r\n        }\r\n      },\r\n      DarkGray: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 16,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'HERE, DeLorme, MapmyIndia, &copy; OpenStreetMap contributors'\r\n        }\r\n      },\r\n      DarkGrayLabels: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Reference/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 16,\r\n          subdomains: ['server', 'services'],\r\n          pane: (pointerEvents) ? 'esri-labels' : 'tilePane',\r\n          attribution: ''\r\n\r\n        }\r\n      },\r\n      Gray: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 16,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'HERE, DeLorme, MapmyIndia, &copy; OpenStreetMap contributors'\r\n        }\r\n      },\r\n      GrayLabels: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Reference/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 16,\r\n          subdomains: ['server', 'services'],\r\n          pane: (pointerEvents) ? 'esri-labels' : 'tilePane',\r\n          attribution: ''\r\n        }\r\n      },\r\n      Imagery: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 22,\r\n          maxNativeZoom: 22,\r\n          downsampled: false,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'DigitalGlobe, GeoEye, i-cubed, USDA, USGS, AEX, Getmapping, Aerogrid, IGN, IGP, swisstopo, and the GIS User Community',\r\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Imagery'\r\n        }\r\n      },\r\n      ImageryLabels: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 19,\r\n          subdomains: ['server', 'services'],\r\n          pane: (pointerEvents) ? 'esri-labels' : 'tilePane',\r\n          attribution: ''\r\n        }\r\n      },\r\n      ImageryTransportation: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 19,\r\n          subdomains: ['server', 'services'],\r\n          pane: (pointerEvents) ? 'esri-labels' : 'tilePane',\r\n          attribution: ''\r\n        }\r\n      },\r\n      ShadedRelief: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 13,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'USGS'\r\n        }\r\n      },\r\n      ShadedReliefLabels: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places_Alternate/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 12,\r\n          subdomains: ['server', 'services'],\r\n          pane: (pointerEvents) ? 'esri-labels' : 'tilePane',\r\n          attribution: ''\r\n        }\r\n      },\r\n      Terrain: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 13,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'USGS, NOAA'\r\n        }\r\n      },\r\n      TerrainLabels: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Reference_Overlay/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 13,\r\n          subdomains: ['server', 'services'],\r\n          pane: (pointerEvents) ? 'esri-labels' : 'tilePane',\r\n          attribution: ''\r\n        }\r\n      },\r\n      USATopo: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/USA_Topo_Maps/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 15,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'USGS, National Geographic Society, i-cubed'\r\n        }\r\n      },\r\n      ImageryClarity: {\r\n        urlTemplate: tileProtocol + '//clarity.maptiles.arcgis.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 19,\r\n          attribution: 'Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community'\r\n        }\r\n      },\r\n      Physical: {\r\n        urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 8,\r\n          subdomains: ['server', 'services'],\r\n          attribution: 'U.S. National Park Service'\r\n        }\r\n      },\r\n      ImageryFirefly: {\r\n        urlTemplate: tileProtocol + '//fly.maptiles.arcgis.com/arcgis/rest/services/World_Imagery_Firefly/MapServer/tile/{z}/{y}/{x}',\r\n        options: {\r\n          minZoom: 1,\r\n          maxZoom: 19,\r\n          attribution: 'Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\r\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Imagery'\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  initialize: function (key, options) {\r\n    var config;\r\n\r\n    // set the config variable with the appropriate config object\r\n    if (typeof key === 'object' && key.urlTemplate && key.options) {\r\n      config = key;\r\n    } else if (typeof key === 'string' && BasemapLayer.TILES[key]) {\r\n      config = BasemapLayer.TILES[key];\r\n    } else {\r\n      throw new Error('L.esri.BasemapLayer: Invalid parameter. Use one of \"Streets\", \"Topographic\", \"Oceans\", \"OceansLabels\", \"NationalGeographic\", \"Physical\", \"Gray\", \"GrayLabels\", \"DarkGray\", \"DarkGrayLabels\", \"Imagery\", \"ImageryLabels\", \"ImageryTransportation\", \"ImageryClarity\", \"ImageryFirefly\", ShadedRelief\", \"ShadedReliefLabels\", \"Terrain\", \"TerrainLabels\" or \"USATopo\"');\r\n    }\r\n\r\n    // merge passed options into the config options\r\n    var tileOptions = Util.extend(config.options, options);\r\n\r\n    Util.setOptions(this, tileOptions);\r\n\r\n    if (this.options.token && config.urlTemplate.indexOf('token=') === -1) {\r\n      config.urlTemplate += ('?token=' + this.options.token);\r\n    }\r\n    if (this.options.proxy) {\r\n      config.urlTemplate = this.options.proxy + '?' + config.urlTemplate;\r\n    }\r\n\r\n    // call the initialize method on L.TileLayer to set everything up\r\n    TileLayer.prototype.initialize.call(this, config.urlTemplate, tileOptions);\r\n  },\r\n\r\n  onAdd: function (map) {\r\n    // include 'Powered by Esri' in map attribution\r\n    setEsriAttribution(map);\r\n\r\n    if (this.options.pane === 'esri-labels') {\r\n      this._initPane();\r\n    }\r\n    // some basemaps can supply dynamic attribution\r\n    if (this.options.attributionUrl) {\r\n      _getAttributionData((this.options.proxy ? this.options.proxy + '?' : '') + this.options.attributionUrl, map);\r\n    }\r\n\r\n    map.on('moveend', _updateMapAttribution);\r\n\r\n    // Esri World Imagery is cached all the way to zoom 22 in select regions\r\n    if (this._url.indexOf('World_Imagery') !== -1) {\r\n      map.on('zoomanim', _fetchTilemap, this);\r\n    }\r\n\r\n    TileLayer.prototype.onAdd.call(this, map);\r\n  },\r\n\r\n  onRemove: function (map) {\r\n    map.off('moveend', _updateMapAttribution);\r\n    TileLayer.prototype.onRemove.call(this, map);\r\n  },\r\n\r\n  _initPane: function () {\r\n    if (!this._map.getPane(this.options.pane)) {\r\n      var pane = this._map.createPane(this.options.pane);\r\n      pane.style.pointerEvents = 'none';\r\n      pane.style.zIndex = 500;\r\n    }\r\n  },\r\n\r\n  getAttribution: function () {\r\n    if (this.options.attribution) {\r\n      var attribution = '<span class=\"esri-dynamic-attribution\">' + this.options.attribution + '</span>';\r\n    }\r\n    return attribution;\r\n  }\r\n});\r\n\r\nfunction _fetchTilemap (evt) {\r\n  var map = evt.target;\r\n  if (!map) { return; }\r\n\r\n  var oldZoom = map.getZoom();\r\n  var newZoom = evt.zoom;\r\n  var newCenter = map.wrapLatLng(evt.center);\r\n\r\n  if (newZoom > oldZoom && newZoom > 13 && !this.options.downsampled) {\r\n    // convert wrapped lat/long into tile coordinates and use them to generate the tilemap url\r\n    var tilePoint = map.project(newCenter, newZoom).divideBy(256).floor();\r\n\r\n    // use new coords to determine the tilemap url\r\n    var tileUrl = Util.template(this._url, Util.extend({\r\n      s: this._getSubdomain(tilePoint),\r\n      x: tilePoint.x,\r\n      y: tilePoint.y,\r\n      z: newZoom\r\n    }, this.options));\r\n\r\n    // 8x8 grids are cached\r\n    var tilemapUrl = tileUrl.replace(/tile/, 'tilemap') + '/8/8';\r\n\r\n    // an array of booleans in the response indicate missing tiles\r\n    request(tilemapUrl, {}, function (err, response) {\r\n      if (!err) {\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          if (!response.data[i]) {\r\n            // if necessary, resample a lower zoom\r\n            this.options.maxNativeZoom = newZoom - 1;\r\n            this.options.downsampled = true;\r\n            break;\r\n          }\r\n          // if no tiles are missing, reset the original maxZoom\r\n          this.options.maxNativeZoom = 22;\r\n        }\r\n      }\r\n    }, this);\r\n  } else if (newZoom < 13) {\r\n    // if the user moves to a new region, time for a fresh test\r\n    this.options.downsampled = false;\r\n  }\r\n}\r\n\r\nexport function basemapLayer (key, options) {\r\n  return new BasemapLayer(key, options);\r\n}\r\n\r\nexport default basemapLayer;\r\n"]},"metadata":{},"sourceType":"module"}