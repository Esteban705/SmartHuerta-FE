{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incluit\\\\Desktop\\\\projects\\\\smartHuerta-FE\\\\egghead-code-examples\\\\add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder\\\\src\\\\components\\\\Loguin\\\\LoguinForm.jsx\";\nimport React from \"react\";\nimport styles from \"./Loguin.module.css\";\nimport \"../../assets/tailwind.css\";\nimport { useFormik } from \"formik\";\nimport { colorButton } from \"../Loguin/Styles/LoguinStyles\";\nimport { Grid, Button, Box, TextField, Typography, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nconst LoguinForm = props => {\n  const {\n    changueToRegister,\n    loginUser\n  } = props;\n\n  const validateMessaje = UIMessaje => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, UIMessaje);\n  };\n\n  const history = useHistory();\n\n  const handleLogin = async values => {\n    const respLogin = await loginUser(values);\n\n    if (respLogin.ok) {\n      toast.success(\"Usuario Logeado con exito \");\n      setTimeout(() => {\n        history.push(\"/map\");\n      }, 1000);\n    } else {\n      console.log(respLogin);\n      toast.error(respLogin.msg);\n    }\n  };\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.name) {\n      errors.name = \"Este campo es obligatorio\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Este campo es obligatorio\";\n    } // if (!values.email) {\n    //   errors.email = 'Required';\n    // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    //   errors.email = 'Invalid email address';\n    // }\n\n\n    return errors;\n  };\n\n  const logInFormik = useFormik({\n    initialValues: {\n      name: \"\",\n      password: \"\",\n      email: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      handleLogin(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    style: {\n      padding: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toaster, {\n    position: \"top-center\",\n    reverseOrder: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: logInFormik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    fullWidth: true,\n    required: true,\n    name: \"name\",\n    id: \"standard-required\",\n    label: \"User Name\",\n    defaultValue: \"\",\n    variant: \"standard\",\n    value: logInFormik.values.name,\n    onChange: logInFormik.handleChange,\n    onBlur: logInFormik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))), logInFormik.touched.name && logInFormik.errors.name ? validateMessaje(logInFormik.errors.name) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    className: `${styles.inputItems}`,\n    fullWidth: true,\n    name: \"password\",\n    required: true,\n    id: \"standard-password-input\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    variant: \"standard\",\n    value: logInFormik.values.password,\n    onChange: logInFormik.handleChange,\n    onBlur: logInFormik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    className: `${styles.inputItems}`,\n    fullWidth: true,\n    name: \"email\",\n    required: true,\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    variant: \"standard\",\n    value: logInFormik.values.email,\n    onChange: logInFormik.handleChange,\n    onBlur: logInFormik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), logInFormik.touched.password && logInFormik.errors.password ? validateMessaje(logInFormik.errors.password) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 22\n      }\n    }),\n    label: \"Recordarme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    style: colorButton,\n    variant: \"contained\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"ingresar\"), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      bottom: \"5px\"\n    },\n    variant: \"body1\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"\\xBFNo tienes cuenta?\", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => changueToRegister(\"register\"),\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Registrarme Ahora\"))));\n};\n\nexport default LoguinForm;","map":{"version":3,"sources":["C:/Users/incluit/Desktop/projects/smartHuerta-FE/egghead-code-examples/add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder/src/components/Loguin/LoguinForm.jsx"],"names":["React","styles","useFormik","colorButton","Grid","Button","Box","TextField","Typography","FormControlLabel","Checkbox","Link","useHistory","toast","Toaster","LoguinForm","props","changueToRegister","loginUser","validateMessaje","UIMessaje","color","history","handleLogin","values","respLogin","ok","success","setTimeout","push","console","log","error","msg","validate","errors","name","password","logInFormik","initialValues","email","onSubmit","padding","handleSubmit","marginTop","handleChange","handleBlur","touched","inputItems","bottom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./Loguin.module.css\";\r\nimport \"../../assets/tailwind.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { colorButton } from \"../Loguin/Styles/LoguinStyles\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst LoguinForm = (props) => {\r\n  const { changueToRegister, loginUser } = props;\r\n  const validateMessaje = (UIMessaje) => {\r\n    return <p style={{ color: \"red\" }}>{UIMessaje}</p>;\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleLogin = async (values) => {\r\n    const respLogin = await loginUser(values);\r\n\r\n    if (respLogin.ok) {\r\n      toast.success(\"Usuario Logeado con exito \");\r\n      setTimeout(() => {\r\n        history.push(\"/map\");\r\n      }, 1000);\r\n    } else {\r\n      console.log(respLogin);\r\n      toast.error(respLogin.msg);\r\n    }\r\n  };\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.name) {\r\n      errors.name = \"Este campo es obligatorio\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Este campo es obligatorio\";\r\n    }\r\n\r\n    // if (!values.email) {\r\n    //   errors.email = 'Required';\r\n    // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    //   errors.email = 'Invalid email address';\r\n    // }\r\n    return errors;\r\n  };\r\n  const logInFormik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleLogin(values);\r\n    },\r\n  });\r\n  return (\r\n    <Box style={{ padding: \"1rem\" }}>\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n      <form onSubmit={logInFormik.handleSubmit}>\r\n        <Grid item align=\"center\">\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            Log in\r\n          </Typography>\r\n          <div>\r\n            <TextField\r\n              style={{ marginTop: \"1.5rem\" }}\r\n              fullWidth\r\n              required\r\n              name=\"name\"\r\n              id=\"standard-required\"\r\n              label=\"User Name\"\r\n              defaultValue=\"\"\r\n              variant=\"standard\"\r\n              value={logInFormik.values.name}\r\n              onChange={logInFormik.handleChange}\r\n              onBlur={logInFormik.handleBlur}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        {logInFormik.touched.name && logInFormik.errors.name\r\n          ? validateMessaje(logInFormik.errors.name)\r\n          : null}\r\n        <Grid item align=\"center\">\r\n          <TextField\r\n            style={{ marginTop: \"0.5rem\" }}\r\n            className={`${styles.inputItems}`}\r\n            fullWidth\r\n            name=\"password\"\r\n            required\r\n            id=\"standard-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            variant=\"standard\"\r\n            value={logInFormik.values.password}\r\n            onChange={logInFormik.handleChange}\r\n            onBlur={logInFormik.handleBlur}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item align=\"center\">\r\n          <TextField\r\n            style={{ marginTop: \"0.5rem\" }}\r\n            className={`${styles.inputItems}`}\r\n            fullWidth\r\n            name=\"email\"\r\n            required\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"standard\"\r\n            value={logInFormik.values.email}\r\n            onChange={logInFormik.handleChange}\r\n            onBlur={logInFormik.handleBlur}\r\n          />\r\n        </Grid>\r\n\r\n        {logInFormik.touched.password && logInFormik.errors.password\r\n          ? validateMessaje(logInFormik.errors.password)\r\n          : null}\r\n        <Grid item mt={5}>\r\n          <FormControlLabel\r\n            style={{ marginTop: \"1.5rem\" }}\r\n            control={<Checkbox color=\"primary\" />}\r\n            label=\"Recordarme\"\r\n          />\r\n        </Grid>\r\n        <Button type=\"submit\" style={colorButton} variant=\"contained\" fullWidth>\r\n          ingresar\r\n        </Button>\r\n        <Typography style={{ bottom: \"5px\" }} variant=\"body1\" color=\"green\">\r\n          ¿No tienes cuenta?\r\n          <Button\r\n            onClick={() => changueToRegister(\"register\")}\r\n            style={{ color: \"green\" }}\r\n          >\r\n            Registrarme Ahora\r\n          </Button>\r\n        </Typography>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoguinForm;\r\n"]},"metadata":{},"sourceType":"module"}