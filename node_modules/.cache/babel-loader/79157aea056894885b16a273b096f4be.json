{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incluit\\\\Desktop\\\\projects\\\\smartHuertaFE\\\\src\\\\components\\\\Loguin\\\\RegisterForm.jsx\";\nimport React, { useState } from \"react\";\nimport { isEmptyArray, useFormik } from \"formik\";\nimport \"../../assets/tailwind.css\";\nimport { colorButton } from \"../Loguin/Styles/LoguinStyles\";\nimport { Grid, Button, Box, TextField, Typography } from \"@material-ui/core\";\nimport { isEmptyObject } from \"jquery\";\nimport { useHistory } from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nconst RegisterForm = props => {\n  const {\n    changueToLoguin,\n    registerUser\n  } = props;\n  const [sucessRegister, setSucessRegister] = useState(false);\n\n  const validateMessaje = UIMessaje => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, UIMessaje);\n  };\n\n  const validate = values => {\n    let errors = {}; //validations name\n\n    if (!values.name) {\n      errors.name = \"Este campo es obligatorio\";\n    } else if (values.name.length < 4) {\n      errors.name = \"Ingrese como minimo 4 caracteres\";\n    } //validation email\n\n\n    if (!values.email) {\n      errors.email = \"Este campo es obligatorio\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = \"Email invalido\";\n    } //validation password\n\n\n    const regExPassword = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{6,16}$/;\n\n    if (!values.password) {\n      errors.password = \"Introduce una contraseña\";\n    } else if (values.password.length < 6 || values.password.length > 16) {\n      errors.password = \"ingrese entre 6 y 16 caracteres\";\n    } else if (!regExPassword.test(values.password)) {\n      errors.password = \"ingrese mayusculas, minusculas y numeros\";\n    } //confirm pasword\n\n\n    if (!values.confirmPassword) {\n      errors.confirmPassword = \"confirmar contraseña\";\n    } else if (values.password !== values.confirmPassword) {\n      errors.confirmPassword = \"Las contraseñas no son iguales\";\n    }\n\n    return errors;\n  };\n\n  const history = useHistory();\n\n  const handleRegister = async values => {\n    const respRegister = await registerUser(values);\n\n    if (respRegister.ok) {\n      toast.success(\"Usuario Registrado con exito \");\n      setTimeout(() => {\n        history.push(\"/map\");\n      }, 1000);\n    } else {\n      console.log(respRegister);\n      toast.error(respRegister.msg);\n    }\n  };\n\n  const registerFormik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validate,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      handleRegister(values);\n      resetForm();\n      setSucessRegister(true);\n      setTimeout(() => {\n        setSucessRegister(false);\n      }, 5000);\n    }\n  });\n  const sucessfullRegisterMessaje = /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Registrado con Exito\");\n  return /*#__PURE__*/React.createElement(Box, {\n    style: {\n      padding: \"1rem\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toaster, {\n    position: \"top-center\",\n    reverseOrder: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: registerFormik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Registrarse\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    style: {\n      marginBottom: \"1rem\"\n    },\n    fullWidth: true,\n    required: true,\n    id: \"name\",\n    label: \"name\",\n    variant: \"standard\",\n    onChange: registerFormik.handleChange,\n    value: registerFormik.values.name,\n    onBlur: registerFormik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), registerFormik.touched.name && registerFormik.errors.name && validateMessaje(registerFormik.errors.name), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    style: {\n      marginBottom: \"1rem\"\n    },\n    fullWidth: true,\n    required: true,\n    id: \"email\",\n    label: \"Email\",\n    variant: \"standard\",\n    onChange: registerFormik.handleChange,\n    value: registerFormik.values.email,\n    onBlur: registerFormik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), registerFormik.touched.email && registerFormik.errors.email && validateMessaje(registerFormik.errors.email), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    style: {\n      marginBottom: \"1rem\"\n    },\n    fullWidth: true,\n    required: true,\n    id: \"standard-password-input\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    variant: \"standard\",\n    onChange: registerFormik.handleChange,\n    value: registerFormik.values.password,\n    onBlur: registerFormik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), registerFormik.touched.password && registerFormik.errors.password && validateMessaje(registerFormik.errors.password), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"confirmPassword\",\n    style: {\n      marginBottom: \"1rem\"\n    },\n    fullWidth: true,\n    required: true,\n    id: \"standard-password-input\",\n    label: \"confirmPassword\",\n    type: \"Password\",\n    autoComplete: \"current-password\",\n    variant: \"standard\",\n    onChange: registerFormik.handleChange,\n    value: registerFormik.values.confirmPassword,\n    onBlur: registerFormik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), registerFormik.touched.confirmPassword && registerFormik.errors.confirmPassword && validateMessaje(registerFormik.errors.confirmPassword), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: \"9.5rem\",\n      marginLeft: \"6.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, sucessRegister ? sucessfullRegisterMessaje : null), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    style: colorButton,\n    variant: \"contained\",\n    fullWidth: true,\n    disabled: !isEmptyObject(registerFormik.errors) // className={` ${styles.colorButton}`}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Registrarme\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"21.87rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      position: \"absolute\",\n      bottom: \"5px\"\n    },\n    variant: \"body1\",\n    color: \"initial\" // style={{ position: \"absolute\", bottom:\"5px\"}}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, \"\\xBFYa tienes una cuenta?\", \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => changueToLoguin(\"loguin\"),\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"ingresar\"))))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Users/incluit/Desktop/projects/smartHuertaFE/src/components/Loguin/RegisterForm.jsx"],"names":["React","useState","isEmptyArray","useFormik","colorButton","Grid","Button","Box","TextField","Typography","isEmptyObject","useHistory","toast","Toaster","RegisterForm","props","changueToLoguin","registerUser","sucessRegister","setSucessRegister","validateMessaje","UIMessaje","color","validate","values","errors","name","length","email","test","regExPassword","password","confirmPassword","history","handleRegister","respRegister","ok","success","setTimeout","push","console","log","error","msg","registerFormik","initialValues","onSubmit","resetForm","sucessfullRegisterMessaje","padding","position","handleSubmit","marginBottom","handleChange","handleBlur","touched","bottom","marginLeft","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { isEmptyArray, useFormik } from \"formik\";\r\nimport \"../../assets/tailwind.css\";\r\nimport { colorButton } from \"../Loguin/Styles/LoguinStyles\";\r\nimport { Grid, Button, Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { isEmptyObject } from \"jquery\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst RegisterForm = (props) => {\r\n  const { changueToLoguin, registerUser } = props;\r\n  const [sucessRegister, setSucessRegister] = useState(false);\r\n\r\n  const validateMessaje = (UIMessaje) => {\r\n    return <p style={{ color: \"red\" }}>{UIMessaje}</p>;\r\n  };\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    //validations name\r\n    if (!values.name) {\r\n      errors.name = \"Este campo es obligatorio\";\r\n    } else if (values.name.length < 4) {\r\n      errors.name = \"Ingrese como minimo 4 caracteres\";\r\n    }\r\n    //validation email\r\n    if (!values.email) {\r\n      errors.email = \"Este campo es obligatorio\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Email invalido\";\r\n    }\r\n    //validation password\r\n    const regExPassword = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{6,16}$/;\r\n    if (!values.password) {\r\n      errors.password = \"Introduce una contraseña\";\r\n    } else if (values.password.length < 6 || values.password.length > 16) {\r\n      errors.password = \"ingrese entre 6 y 16 caracteres\";\r\n    } else if (!regExPassword.test(values.password)) {\r\n      errors.password = \"ingrese mayusculas, minusculas y numeros\";\r\n    }\r\n\r\n    //confirm pasword\r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = \"confirmar contraseña\";\r\n    } else if (values.password !== values.confirmPassword) {\r\n      errors.confirmPassword = \"Las contraseñas no son iguales\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleRegister = async (values) => {\r\n    const respRegister = await registerUser(values);\r\n\r\n    if (respRegister.ok) {\r\n      toast.success(\"Usuario Registrado con exito \");\r\n      setTimeout(() => {\r\n        history.push(\"/map\");\r\n      }, 1000);\r\n    } else {\r\n      console.log(respRegister)\r\n      toast.error(respRegister.msg);\r\n    }\r\n  };\r\n\r\n  const registerFormik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values, { resetForm }) => {\r\n      handleRegister(values)\r\n      resetForm();\r\n      setSucessRegister(true);\r\n      setTimeout(() => {\r\n        setSucessRegister(false);\r\n      }, 5000);\r\n    },\r\n  });\r\n  const sucessfullRegisterMessaje = (\r\n    <p style={{ color: \"green\" }}>Registrado con Exito</p>\r\n  );\r\n  return (\r\n\r\n    <Box style={{ padding: \"1rem\", position: \"relative\" }}>\r\n        <Toaster position=\"top-center\" reverseOrder={false} />\r\n      <form onSubmit={registerFormik.handleSubmit}>\r\n        <Grid item align=\"center\">\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            Registrarse\r\n          </Typography>\r\n\r\n          <TextField\r\n            name=\"name\"\r\n            style={{ marginBottom: \"1rem\" }}\r\n            fullWidth\r\n            required\r\n            id=\"name\"\r\n            label=\"name\"\r\n            variant=\"standard\"\r\n            onChange={registerFormik.handleChange}\r\n            value={registerFormik.values.name}\r\n            onBlur={registerFormik.handleBlur}\r\n          />\r\n        </Grid>\r\n        {registerFormik.touched.name &&\r\n          registerFormik.errors.name &&\r\n          validateMessaje(registerFormik.errors.name)}\r\n        <Grid item align=\"center\">\r\n          <TextField\r\n            name=\"email\"\r\n            style={{ marginBottom: \"1rem\" }}\r\n            fullWidth\r\n            required\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            variant=\"standard\"\r\n            onChange={registerFormik.handleChange}\r\n            value={registerFormik.values.email}\r\n            onBlur={registerFormik.handleBlur}\r\n          />\r\n        </Grid>\r\n        {registerFormik.touched.email &&\r\n          registerFormik.errors.email &&\r\n          validateMessaje(registerFormik.errors.email)}\r\n        <div>\r\n          <TextField\r\n            name=\"password\"\r\n            style={{ marginBottom: \"1rem\" }}\r\n            fullWidth\r\n            required\r\n            id=\"standard-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            variant=\"standard\"\r\n            onChange={registerFormik.handleChange}\r\n            value={registerFormik.values.password}\r\n            onBlur={registerFormik.handleBlur}\r\n          />\r\n        </div>\r\n        {registerFormik.touched.password &&\r\n          registerFormik.errors.password &&\r\n          validateMessaje(registerFormik.errors.password)}\r\n        <div>\r\n          <TextField\r\n            name=\"confirmPassword\"\r\n           style={{ marginBottom: \"1rem\" }}\r\n            fullWidth\r\n            required\r\n            id=\"standard-password-input\"\r\n            label=\"confirmPassword\"\r\n            type=\"Password\"\r\n            autoComplete=\"current-password\"\r\n            variant=\"standard\"\r\n            onChange={registerFormik.handleChange}\r\n            value={registerFormik.values.confirmPassword}\r\n            onBlur={registerFormik.handleBlur}\r\n          />\r\n        </div>\r\n        {registerFormik.touched.confirmPassword &&\r\n          registerFormik.errors.confirmPassword &&\r\n          validateMessaje(registerFormik.errors.confirmPassword)}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"9.5rem\",\r\n            marginLeft: \"6.5rem\",\r\n          }}\r\n        >\r\n          {sucessRegister ? sucessfullRegisterMessaje : null}\r\n        </div>\r\n        <Grid item mt={5}>\r\n          <Button\r\n            type=\"submit\"\r\n            style={colorButton}\r\n            variant=\"contained\"\r\n            fullWidth\r\n            disabled={!isEmptyObject(registerFormik.errors)}\r\n            // className={` ${styles.colorButton}`}\r\n          >\r\n            Registrarme\r\n            {/* <Link to=\"/home\">Registrarme</Link> */}\r\n          </Button>\r\n          <div style={{ width: \"21.87rem\" }}>\r\n            <Typography\r\n              style={{ position: \"absolute\", bottom: \"5px\" }}\r\n              variant=\"body1\"\r\n              color=\"initial\"\r\n              // style={{ position: \"absolute\", bottom:\"5px\"}}\r\n            >\r\n              ¿Ya tienes una cuenta?{\" \"}\r\n              <Button\r\n                onClick={() => changueToLoguin(\"loguin\")}\r\n                style={{ color: \"green\" }}\r\n              >\r\n                ingresar\r\n              </Button>\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}