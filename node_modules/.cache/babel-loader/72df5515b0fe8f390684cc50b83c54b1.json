{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incluit\\\\Desktop\\\\projects\\\\smartHuerta-FE\\\\egghead-code-examples\\\\add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder\\\\src\\\\components\\\\map\\\\VenueMarkers.js\";\nimport React from \"react\";\nimport { Marker } from \"react-leaflet\";\nimport MarkerPopup from \"../user/MarkerPopup\";\nimport { Popup } from \"react-leaflet\";\nimport VenueLocationIcon, { icon, iconSpecial } from \"../map/VenueLocationIcon\";\nimport { useContext } from \"react\";\nimport { HttpContext } from \"../Context/httpContext\";\nimport { toast } from \"react-hot-toast\";\n\nconst VenueMarkers = props => {\n  var _dataHome$data;\n\n  const {\n    dataHome,\n    getAllHomes,\n    setDeleteHome\n  } = props;\n  const {\n    put\n  } = useContext(HttpContext);\n\n  const deleteHome = async dataTodelete => {\n    const dateleHome = await put(`/api/homes/delete/${dataTodelete.id}`);\n    await getAllHomes();\n    setDeleteHome(true);\n    return dateleHome;\n  };\n\n  const markers = ((_dataHome$data = dataHome.data) !== null && _dataHome$data !== void 0 ? _dataHome$data : []).map((venue, i) => /*#__PURE__*/React.createElement(Marker, {\n    key: i,\n    position: venue.geometry,\n    icon: venue.isSpecial ? iconSpecial : icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MarkerPopup, {\n    venue: venue,\n    deleteHome: deleteHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, markers);\n};\n\nexport default VenueMarkers;","map":{"version":3,"sources":["C:/Users/incluit/Desktop/projects/smartHuerta-FE/egghead-code-examples/add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder/src/components/map/VenueMarkers.js"],"names":["React","Marker","MarkerPopup","Popup","VenueLocationIcon","icon","iconSpecial","useContext","HttpContext","toast","VenueMarkers","props","dataHome","getAllHomes","setDeleteHome","put","deleteHome","dataTodelete","dateleHome","id","markers","data","map","venue","i","geometry","isSpecial"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,iBAAP,IAA4BC,IAA5B,EAAkCC,WAAlC,QAAqD,0BAArD;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAA2CH,KAAjD;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAUR,UAAU,CAACC,WAAD,CAA1B;;AAEA,QAAMQ,UAAU,GAAG,MAAOC,YAAP,IAAwB;AAEzC,UAAMC,UAAU,GAAG,MAAMH,GAAG,CAAE,qBAAoBE,YAAY,CAACE,EAAG,EAAtC,CAA5B;AAEA,UAAMN,WAAW,EAAjB;AAEAC,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEA,WAAOI,UAAP;AACD,GATD;;AAWA,QAAME,OAAO,GAAG,mBAACR,QAAQ,CAACS,IAAV,2DAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,CAACC,KAAD,EAAQC,CAAR,kBACxC,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,QAAQ,EAAED,KAAK,CAACE,QAFlB;AAGE,IAAA,IAAI,EAAEF,KAAK,CAACG,SAAN,GAAkBpB,WAAlB,GAAgCD,IAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEkB,KAApB;AAA2B,IAAA,UAAU,EAAEP,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADc,CAAhB;AAWA,sBAAO,0CAAGI,OAAH,CAAP;AACD,CA3BD;;AA6BA,eAAeV,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Marker } from \"react-leaflet\";\r\nimport MarkerPopup from \"../user/MarkerPopup\";\r\nimport { Popup } from \"react-leaflet\";\r\nimport VenueLocationIcon, { icon, iconSpecial } from \"../map/VenueLocationIcon\";\r\nimport { useContext } from \"react\";\r\nimport { HttpContext } from \"../Context/httpContext\";\r\nimport { toast } from \"react-hot-toast\";\r\nconst VenueMarkers = (props) => {\r\n  const { dataHome, getAllHomes, setDeleteHome } = props;\r\n  const { put } = useContext(HttpContext);\r\n\r\n  const deleteHome = async (dataTodelete) => {\r\n\r\n    const dateleHome = await put(`/api/homes/delete/${dataTodelete.id}`);\r\n\r\n    await getAllHomes();\r\n\r\n    setDeleteHome(true)\r\n\r\n    return dateleHome;\r\n  };\r\n\r\n  const markers = (dataHome.data ?? []).map((venue, i) => (\r\n    <Marker\r\n      key={i}\r\n      position={venue.geometry}\r\n      icon={venue.isSpecial ? iconSpecial : icon}\r\n    >\r\n      <MarkerPopup venue={venue} deleteHome={deleteHome} />\r\n    </Marker>\r\n  ))\r\n\r\n\r\n  return <>{markers}</>;\r\n};\r\n\r\nexport default VenueMarkers;\r\n"]},"metadata":{},"sourceType":"module"}