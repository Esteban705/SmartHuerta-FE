{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incluit\\\\Desktop\\\\projects\\\\smartHuertaFE\\\\src\\\\components\\\\user\\\\avatar\\\\ModalAvatarUI.js\";\nimport React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport { DialogActions, DialogTitle, IconButton, makeStyles } from \"@material-ui/core\";\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport resizeEncodedPicture from \"./helpers/resizeEncodedPicture\";\n\nconst ModalAvatarUI = props => {\n  const {\n    handleClose,\n    open,\n    setImg\n  } = props;\n  const [file, setFile] = useState(\"\");\n\n  const onImageChange = async encodedPicture => {\n    const newEncodedPicture = await resizeEncodedPicture(encodedPicture, 150, 150);\n    setImg(newEncodedPicture);\n  };\n\n  const handleUpgradeImg = async () => {\n    const fileAvatar = file;\n    const render = new FileReader();\n    render.readAsDataURL(fileAvatar);\n\n    render.onload = () => {\n      onImageChange(render.result);\n    };\n\n    handleClose();\n  };\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(1)\n      }\n    },\n    input: {\n      display: \"none\"\n    }\n  }));\n  const classes = useStyles();\n  const DialogContent = withStyles(theme => ({\n    root: {\n      padding: theme.spacing(2)\n    }\n  }))(MuiDialogContent);\n  const DialogActions = withStyles(theme => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  }))(MuiDialogActions);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Cambiar Foto de Perfil\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"contained-button-file\",\n    multiple: true,\n    type: \"file\"\n    /* onChange={(e) => console.log(e)} */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"icon-button-file\",\n    onChange: e => setFile(e.target.files[0]),\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PhotoCameraIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleUpgradeImg,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Save changes\"))));\n};\n\nexport default ModalAvatarUI;","map":{"version":3,"sources":["C:/Users/incluit/Desktop/projects/smartHuertaFE/src/components/user/avatar/ModalAvatarUI.js"],"names":["React","useState","withStyles","Button","Dialog","Typography","MuiDialogContent","MuiDialogActions","DialogActions","DialogTitle","IconButton","makeStyles","PhotoCameraIcon","resizeEncodedPicture","ModalAvatarUI","props","handleClose","open","setImg","file","setFile","onImageChange","encodedPicture","newEncodedPicture","handleUpgradeImg","fileAvatar","render","FileReader","readAsDataURL","onload","result","useStyles","theme","root","margin","spacing","input","display","classes","DialogContent","padding","e","target","files"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport {\r\n  DialogActions,\r\n  DialogTitle,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport resizeEncodedPicture from \"./helpers/resizeEncodedPicture\";\r\n\r\nconst ModalAvatarUI = (props) => {\r\n  const { handleClose, open, setImg } = props;\r\n\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const onImageChange = async (encodedPicture) => {\r\n    const newEncodedPicture = await resizeEncodedPicture(\r\n      encodedPicture,\r\n      150,\r\n      150\r\n    );\r\n\r\n    setImg(newEncodedPicture);\r\n  };\r\n\r\n  const handleUpgradeImg = async () => {\r\n    const fileAvatar = file;\r\n    const render = new FileReader();\r\n    render.readAsDataURL(fileAvatar);\r\n\r\n    render.onload = () => {\r\n      onImageChange(render.result);\r\n    };\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const DialogContent = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiDialogContent);\r\n\r\n  const DialogActions = withStyles((theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1),\r\n    },\r\n  }))(MuiDialogActions);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Cambiar Foto de Perfil\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            <div className={classes.root}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                /* onChange={(e) => console.log(e)} */\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Upload\r\n                </Button>\r\n              </label>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"icon-button-file\"\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                >\r\n                  <PhotoCameraIcon />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleUpgradeImg} color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalAvatarUI;\r\n"]},"metadata":{},"sourceType":"module"}