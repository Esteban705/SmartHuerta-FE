{"ast":null,"code":"const resizeEncodedPicture = async (encoded, width, height) => new Promise(async resolve => {\n  if (encoded.length) {\n    const img = document.createElement('img');\n    const destructImage = encoded[0].split(';');\n    const mimeType = destructImage[0].split(':')[1];\n\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, width, height);\n      const dataURI = canvas.toDataURL(mimeType);\n      resolve(dataURI);\n    };\n\n    img.src = encoded;\n  } else {\n    resolve(encoded);\n  }\n});\n\nexport default resizeEncodedPicture;","map":{"version":3,"sources":["C:/Users/incluit/Desktop/projects/smartHuerta-FE/egghead-code-examples/add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder/src/components/user/avatar/helpers/resizeEncodedPicture.js"],"names":["resizeEncodedPicture","encoded","width","height","Promise","resolve","length","img","document","createElement","destructImage","split","mimeType","onload","canvas","ctx","getContext","drawImage","dataURI","toDataURL","src"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,OAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,MAAvB,KAC3B,IAAIC,OAAJ,CAAY,MAAOC,OAAP,IAAmB;AAC7B,MAAIJ,OAAO,CAACK,MAAZ,EAAoB;AAClB,UAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACA,UAAMC,aAAa,GAAGT,OAAO,CAAC,CAAD,CAAP,CAAWU,KAAX,CAAiB,GAAjB,CAAtB;AACA,UAAMC,QAAQ,GAAGF,aAAa,CAAC,CAAD,CAAb,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAjB;;AAEAJ,IAAAA,GAAG,CAACM,MAAJ,GAAa,MAAM;AACjB,YAAMC,MAAM,GAAGN,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,YAAMM,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AAEAF,MAAAA,MAAM,CAACZ,KAAP,GAAeA,KAAf;AACAY,MAAAA,MAAM,CAACX,MAAP,GAAgBA,MAAhB;AAEAY,MAAAA,GAAG,CAACE,SAAJ,CAAcV,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBL,KAAzB,EAAgCC,MAAhC;AAEA,YAAMe,OAAO,GAAGJ,MAAM,CAACK,SAAP,CAAiBP,QAAjB,CAAhB;AACAP,MAAAA,OAAO,CAACa,OAAD,CAAP;AACD,KAXD;;AAYAX,IAAAA,GAAG,CAACa,GAAJ,GAAUnB,OAAV;AACD,GAlBD,MAkBO;AACLI,IAAAA,OAAO,CAACJ,OAAD,CAAP;AACD;AACF,CAtBD,CADF;;AAyBE,eAAeD,oBAAf","sourcesContent":["const resizeEncodedPicture = async (encoded, width, height) =>\r\n  new Promise(async (resolve) => {\r\n    if (encoded.length) {\r\n      const img = document.createElement('img');\r\n      const destructImage = encoded[0].split(';');\r\n      const mimeType = destructImage[0].split(':')[1];\r\n\r\n      img.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n\r\n        const dataURI = canvas.toDataURL(mimeType);\r\n        resolve(dataURI);\r\n      };\r\n      img.src = encoded;\r\n    } else {\r\n      resolve(encoded);\r\n    }\r\n  });\r\n\r\n  export default resizeEncodedPicture;"]},"metadata":{},"sourceType":"module"}