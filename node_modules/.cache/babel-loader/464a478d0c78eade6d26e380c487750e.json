{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incluit\\\\Desktop\\\\projects\\\\smartHuerta-FE\\\\egghead-code-examples\\\\add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder\\\\src\\\\components\\\\user\\\\FormView.js\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Avatar, Button, Checkbox, Divider, Grid, InputAdornment, TextField } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { avatarFormStyle } from \"./styles/popupStyles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { imageOfCarrousel } from \"./carrousel/imagenes\";\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\n});\n\nconst handlesave = value => {\n  console.log(value);\n};\n\nconst categorias = [{\n  descripcion: \"Verdura\",\n  idMateria: 5\n}, {\n  descripcion: \"Frutas\",\n  idMateria: 5\n}, {\n  descripcion: \"Tuberculos\",\n  idMateria: 5\n}];\nexport const FormView = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  },\n  enableReinitialize: true,\n  validate: SignupSchema,\n  onSubmit: values => {\n    // same shape as initial values\n    console.log(values);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, (formikProps, errors, touched) => /*#__PURE__*/React.createElement(\"form\", {\n  noValidate: true,\n  autoComplete: \"off\",\n  align: \"center\",\n  onSubmit: console.log('asd'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"w-full text-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 16\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  src: imageOfCarrousel.imagenCebolla\n  /* onClick={() => handleClickOpen()} */\n  ,\n  style: avatarFormStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 16\n  }\n}, /*#__PURE__*/React.createElement(PersonIcon, {\n  style: {\n    height: 120,\n    width: 120\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(TextField, {\n  type: \"text\",\n  name: \"name\",\n  style: {\n    width: \"80%\",\n    marginTop: \"30px\"\n  },\n  variant: \"outlined\",\n  placeholder: \"Nombre\",\n  label: \"Nombre\",\n  fullWidth: true,\n  InputProps: {\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }))\n  }\n  /* helperText={\r\n      errors.firstName && touched.firstName ? errors.firstName : null\r\n  } */\n\n  /* value={element.id ?? ''} */\n  ,\n  onChange: e => console.log(touched),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  type: \"number\",\n  name: \"cel\",\n  style: {\n    width: \"80%\",\n    marginTop: \"30px\",\n    marginBottom: \"30px\"\n  },\n  variant: \"outlined\",\n  placeholder: \"Cantidad (en KG)\",\n  label: \"Cantidad (en KG)\",\n  fullWidth: true,\n  InputProps: {\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }))\n  }\n  /* helperText={\r\n      errors.firstName && touched.firstName ? errors.firstName : null\r\n  } */\n\n  /* value={element.id ?? ''} */\n  ,\n  onChange: e => console.log(touched),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Autocomplete, {\n  disableCloseOnSelect: true,\n  multiple: true,\n  style: {\n    width: \"80%\",\n    marginTop: \"20px\",\n    margin: \"auto\"\n  },\n  id: \"tags-outlined\",\n  options: categorias,\n  getOptionLabel: option => option.descripcion,\n  filterSelectedOptions: true,\n  renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n    variant: \"outlined\",\n    label: \"categorias\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  type: \"text\",\n  name: \"email\",\n  style: {\n    width: \"80%\",\n    marginTop: \"20px\"\n  },\n  variant: \"outlined\",\n  placeholder: \"Comentarios\",\n  label: \"Comentarios\",\n  fullWidth: true,\n  InputProps: {\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }))\n  }\n  /* helperText={\r\n      errors.firstName && touched.firstName ? errors.firstName : null\r\n  } */\n\n  /* value={element.id ?? ''} */\n  ,\n  onChange: e => console.log(\"asd\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Button, {\n  style: {\n    marginTop: '20px',\n    background: 'red'\n  },\n  size: \"large\",\n  component: \"label\",\n  variant: \"contained\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"input\", {\n  hidden: true,\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 13\n  }\n}), \"Agregar\")))));","map":{"version":3,"sources":["C:/Users/incluit/Desktop/projects/smartHuerta-FE/egghead-code-examples/add-placename-location-search-to-react-leaflet-esri-leaflet-geocoder/src/components/user/FormView.js"],"names":["React","Formik","Form","Field","Yup","Avatar","Button","Checkbox","Divider","Grid","InputAdornment","TextField","EditIcon","avatarFormStyle","PersonIcon","Autocomplete","imageOfCarrousel","SignupSchema","object","shape","firstName","string","min","max","required","lastName","email","handlesave","value","console","log","categorias","descripcion","idMateria","FormView","values","formikProps","errors","touched","imagenCebolla","height","width","marginTop","endAdornment","e","marginBottom","margin","option","params","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,OAAnC,EAA4CC,IAA5C,EAAkDC,cAAlD,EAAkEC,SAAlE,QAAmF,mBAAnF;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,MAAMC,YAAY,GAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,SAAS,EAAEhB,GAAG,CAACiB,MAAJ,GACRC,GADQ,CACJ,CADI,EACD,YADC,EAERC,GAFQ,CAEJ,EAFI,EAEA,WAFA,EAGRC,QAHQ,CAGC,UAHD,CAD2B;AAKtCC,EAAAA,QAAQ,EAAErB,GAAG,CAACiB,MAAJ,GACPC,GADO,CACH,CADG,EACA,YADA,EAEPC,GAFO,CAEH,EAFG,EAEC,WAFD,EAGPC,QAHO,CAGE,UAHF,CAL4B;AAStCE,EAAAA,KAAK,EAAEtB,GAAG,CAACiB,MAAJ,GAAaK,KAAb,CAAmB,eAAnB,EAAoCF,QAApC,CAA6C,UAA7C;AAT+B,CAAnB,CAArB;;AAYA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC,CAFD;;AAKA,MAAMG,UAAU,GAAG,CACjB;AAAEC,EAAAA,WAAW,EAAE,SAAf;AAA0BC,EAAAA,SAAS,EAAE;AAArC,CADiB,EAEjB;AAAED,EAAAA,WAAW,EAAE,QAAf;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CAFiB,EAGjB;AAAED,EAAAA,WAAW,EAAE,YAAf;AAA6BC,EAAAA,SAAS,EAAE;AAAxC,CAHiB,CAAnB;AAMA,OAAO,MAAMC,QAAQ,GAAG,mBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE,oBAAC,MAAD;AACM,EAAA,aAAa,EAAE;AACbd,IAAAA,SAAS,EAAE,EADE;AAEbK,IAAAA,QAAQ,EAAE,EAFG;AAGbC,IAAAA,KAAK,EAAE;AAHM,GADrB;AAMM,EAAA,kBAAkB,MANxB;AAOM,EAAA,QAAQ,EAAET,YAPhB;AAQM,EAAA,QAAQ,EAAEkB,MAAM,IAAI;AAClB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,GAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAaO,CAACC,WAAD,EAAcC,MAAd,EAAsBC,OAAtB,kBACC;AACE,EAAA,UAAU,MADZ;AAEE,EAAA,YAAY,EAAC,KAFf;AAGE,EAAA,KAAK,EAAC,QAHR;AAIE,EAAA,QAAQ,EAAET,OAAO,CAACC,GAAR,CAAY,KAAZ,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMG;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGA,oBAAC,MAAD;AACH,EAAA,GAAG,EAAEd,gBAAgB,CAACuB;AACtB;AAFG;AAGH,EAAA,KAAK,EAAE1B,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKH,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAE;AAAE2B,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALG,CAHA,eAYL,oBAAC,SAAD;AACE,EAAA,IAAI,EAAC,MADP;AAEE,EAAA,IAAI,EAAC,MAFP;AAGE,EAAA,KAAK,EAAE;AAAEA,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAHT;AAIE,EAAA,OAAO,EAAC,UAJV;AAKE,EAAA,WAAW,EAAE,QALf;AAME,EAAA,KAAK,EAAE,QANT;AAOE,EAAA,SAAS,MAPX;AAQE,EAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,eACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAFQ;AAOZ;;;;AAGA;AAlBF;AAmBE,EAAA,QAAQ,EAAGC,CAAD,IAAOf,OAAO,CAACC,GAAR,CAAYQ,OAAZ,CAnBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAZK,eAiCL,oBAAC,SAAD;AACE,EAAA,IAAI,EAAC,QADP;AAEE,EAAA,IAAI,EAAC,KAFP;AAGE,EAAA,KAAK,EAAE;AAAEG,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,SAAS,EAAE,MAA3B;AAAmCG,IAAAA,YAAY,EAAE;AAAjD,GAHT;AAIE,EAAA,OAAO,EAAC,UAJV;AAKE,EAAA,WAAW,EAAE,kBALf;AAME,EAAA,KAAK,EAAE,kBANT;AAOE,EAAA,SAAS,MAPX;AAQE,EAAA,UAAU,EAAE;AACVF,IAAAA,YAAY,eACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAFQ;AAOZ;;;;AAGA;AAlBF;AAmBE,EAAA,QAAQ,EAAGC,CAAD,IAAOf,OAAO,CAACC,GAAR,CAAYQ,OAAZ,CAnBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAjCK,eAuDX,oBAAC,YAAD;AACI,EAAA,oBAAoB,MADxB;AAEI,EAAA,QAAQ,MAFZ;AAGI,EAAA,KAAK,EAAE;AAAEG,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,SAAS,EAAE,MAA3B;AAAmCI,IAAAA,MAAM,EAAE;AAA3C,GAHX;AAII,EAAA,EAAE,EAAC,eAJP;AAKI,EAAA,OAAO,EAAEf,UALb;AAMI,EAAA,cAAc,EAAGgB,MAAD,IAAYA,MAAM,CAACf,WANvC;AAOI,EAAA,qBAAqB,MAPzB;AAQI,EAAA,WAAW,EAAGgB,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvDW,eAuEL,oBAAC,SAAD;AACE,EAAA,IAAI,EAAC,MADP;AAEE,EAAA,IAAI,EAAC,OAFP;AAGE,EAAA,KAAK,EAAE;AAAEP,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAHT;AAIE,EAAA,OAAO,EAAC,UAJV;AAKE,EAAA,WAAW,EAAE,aALf;AAME,EAAA,KAAK,EAAE,aANT;AAOE,EAAA,SAAS,MAPX;AAQE,EAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,eACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAFQ;AAOZ;;;;AAGA;AAlBF;AAmBE,EAAA,QAAQ,EAAGC,CAAD,IAAOf,OAAO,CAACC,GAAR,CAAY,KAAZ,CAnBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvEK,eA6FP,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAE;AAACY,IAAAA,SAAS,EAAE,MAAZ;AAAoBO,IAAAA,UAAU,EAAE;AAAhC,GAAf;AAAuD,EAAA,IAAI,EAAC,OAA5D;AAAoE,EAAA,SAAS,EAAC,OAA9E;AAAuF,EAAA,OAAO,EAAC,WAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAO,EAAA,MAAM,MAAb;AAAc,EAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,YA7FO,CANH,CAdR,CAFF,CADK","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Avatar, Button, Checkbox, Divider, Grid, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { avatarFormStyle } from \"./styles/popupStyles\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { imageOfCarrousel } from \"./carrousel/imagenes\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  lastName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n\r\nconst handlesave = (value) => {\r\nconsole.log(value)\r\n}\r\n\r\n\r\nconst categorias = [\r\n  { descripcion: \"Verdura\", idMateria: 5 },\r\n  { descripcion: \"Frutas\", idMateria: 5 },\r\n  { descripcion: \"Tuberculos\", idMateria: 5 },\r\n]\r\n\r\nexport const FormView = () => (\r\n  <div>\r\n\r\n    <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n          }}\r\n          enableReinitialize\r\n          validate={SignupSchema}\r\n          onSubmit={values => {\r\n            // same shape as initial values\r\n            console.log(values);\r\n          }}\r\n        >\r\n          {(formikProps, errors, touched) => (\r\n            <form\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              align=\"center\"\r\n              onSubmit={console.log('asd')}\r\n            >\r\n               <div className=\"w-full text-center\">\r\n\r\n\r\n               <Avatar\r\n            src={imageOfCarrousel.imagenCebolla}\r\n            /* onClick={() => handleClickOpen()} */\r\n            style={avatarFormStyle}\r\n          >\r\n            <PersonIcon style={{ height: 120, width: 120 }} />\r\n          </Avatar>\r\n\r\n\r\n          <TextField\r\n            type=\"text\"\r\n            name=\"name\"\r\n            style={{ width: \"80%\", marginTop: \"30px\" }}\r\n            variant=\"outlined\"\r\n            placeholder={\"Nombre\"}\r\n            label={\"Nombre\"}\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <EditIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            /* helperText={\r\n                errors.firstName && touched.firstName ? errors.firstName : null\r\n            } */\r\n            /* value={element.id ?? ''} */\r\n            onChange={(e) => console.log(touched)}\r\n          />\r\n          <TextField\r\n            type=\"number\"\r\n            name=\"cel\"\r\n            style={{ width: \"80%\", marginTop: \"30px\", marginBottom: \"30px\" }}\r\n            variant=\"outlined\"\r\n            placeholder={\"Cantidad (en KG)\"}\r\n            label={\"Cantidad (en KG)\"}\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <EditIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            /* helperText={\r\n                errors.firstName && touched.firstName ? errors.firstName : null\r\n            } */\r\n            /* value={element.id ?? ''} */\r\n            onChange={(e) => console.log(touched)}\r\n          />\r\n\r\n    <Autocomplete\r\n        disableCloseOnSelect\r\n        multiple\r\n        style={{ width: \"80%\", marginTop: \"20px\", margin: \"auto\" }}\r\n        id=\"tags-outlined\"\r\n        options={categorias}\r\n        getOptionLabel={(option) => option.descripcion}\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"categorias\"\r\n          />\r\n        )}\r\n      />\r\n          <TextField\r\n            type=\"text\"\r\n            name=\"email\"\r\n            style={{ width: \"80%\", marginTop: \"20px\" }}\r\n            variant=\"outlined\"\r\n            placeholder={\"Comentarios\"}\r\n            label={\"Comentarios\"}\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <EditIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            /* helperText={\r\n                errors.firstName && touched.firstName ? errors.firstName : null\r\n            } */\r\n            /* value={element.id ?? ''} */\r\n            onChange={(e) => console.log(\"asd\")}\r\n          />\r\n\r\n        <Button style={{marginTop: '20px', background: 'red'}} size=\"large\" component=\"label\"  variant=\"contained\">\r\n            <input hidden type=\"submit\"></input>\r\n            Agregar\r\n        </Button>\r\n        {/*  <button type=\"submit\">Submit</button> */}\r\n        </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n  </div>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}